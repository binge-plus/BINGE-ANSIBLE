name: BINGE Services Installation
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Configuration Set'
        required: true
        default: 'binge'
        type: choice
        options:
          - binge
      playbook:
        description: 'Playbook to run'
        required: true
        default: 'binge-services'
        type: choice
        options:
          - binge-services
          - jenkins

jobs:
  run-playbook:
    name: "Install BINGE Services"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/ansible
    
    steps:
      # Checkout Project repository
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Setup SSH key for secure server login
      - name: Set up SSH Key file
        run: |
          if [ -z "${{ secrets.GCP_VM_PRIVATE_KEY }}" ]; then
            echo "Error: SSH key is not set in secrets"
            exit 1
          fi
          echo "${{ secrets.GCP_VM_PRIVATE_KEY }}" > private_key.pem
          chmod 400 private_key.pem
          ls -la private_key.pem

      # Install Ansible
      - name: Install Ansible
        run: |
          sudo apt-get update -y
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt-get install -y ansible
          ansible --version

      # Determine which playbook to run
      - name: Set playbook filename
        id: set-playbook
        run: |
          if [ "${{ inputs.playbook }}" == "jenkins" ]; then
            echo "::set-output name=playbook_file::jenkins-playbook.yml"
          else
            echo "::set-output name=playbook_file::binge-services-playbook.yml"
          fi

      # Verify inventory file exists
      - name: Check inventory file
        run: |
          if [ ! -f "config/${{ inputs.env }}/inventory.ini" ]; then
            echo "Error: Inventory file not found at config/${{ inputs.env }}/inventory.ini"
            exit 1
          fi
          cat "config/${{ inputs.env }}/inventory.ini"

      # Verify Ansible Playbook
      - name: Verify Ansible playbook
        run: |
          ansible-playbook ${{ steps.set-playbook.outputs.playbook_file }} --syntax-check -i "config/${{ inputs.env }}/inventory.ini" -e "env=${{ inputs.env }}"

      # Test Servers Connectivity
      - name: Test servers connectivity
        run: |
          if [ "${{ inputs.playbook }}" == "jenkins" ]; then
            ansible jenkins_servers -m ping -i "config/${{ inputs.env }}/inventory.ini"
          else
            ansible binge_servers -m ping -i "config/${{ inputs.env }}/inventory.ini"
          fi

      # Run Ansible Playbook
      - name: Run Ansible playbook
        run: |
          ansible-playbook ${{ steps.set-playbook.outputs.playbook_file }} -i "config/${{ inputs.env }}/inventory.ini" -e "env=${{ inputs.env }}"
